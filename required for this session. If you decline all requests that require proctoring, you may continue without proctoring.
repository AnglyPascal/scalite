[1mdiff --git a/src/main/scala/com/anglypascal/scalite/Defaults.scala b/src/main/scala/com/anglypascal/scalite/Defaults.scala[m
[1mindex 1b93096..29a56f7 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/Defaults.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/Defaults.scala[m
[36m@@ -1,11 +1,14 @@[m
 package com.anglypascal.scalite[m
 [m
 import com.rallyhealth.weejson.v1.Obj[m
[32m+[m[32mimport com.rallyhealth.weejson.v1.Arr[m
 [m
 object Defaults:[m
[32m+[m
   val title = "A Shiny New Website"[m
   val description = "Site description"[m
   val permalinkTemplate = "{{> default }}"[m
[32m+[m[32m  val staticFilesPermalink = "/{{title}}.{{outputExt}}"[m
   val dateFormat = "dd MMM, yyyy"[m
   val showExceprts = true[m
   val lang = "en"[m
[36m@@ -22,10 +25,33 @@[m [mobject Defaults:[m
     val dataDir = "/_data"[m
     val pluginsDir = "/_plugins"[m
 [m
[32m+[m[32m  object Reading:[m
[32m+[m[32m    val include = Arr(".htaccess")[m
[32m+[m[32m    val exclude = Arr("build.sbt")[m
[32m+[m[32m    val keepFiles = Arr(".git", ".svn") // give regex list[m
[32m+[m[32m    val markdownExt = "markdown,mkdown,mkdn,mkd,md"[m
[32m+[m[32m    val textileExt = "textile"[m
[32m+[m[32m    val encoding = "utf-8"[m
[32m+[m
   object Collection:[m
     val toc = false[m
     val sortBy = "title"[m
 [m
   object Posts:[m
     val output = true[m
[32m+[m[32m    val folder = "/_posts"[m
     val name = "posts"[m
[32m+[m[32m    val directory = Directories.collectionsDir[m
[32m+[m[32m    val sortBy = "dates"[m
[32m+[m[32m    val toc = false[m
[32m+[m
[32m+[m[32m  object Drafts:[m
[32m+[m[32m    val output = false[m
[32m+[m[32m    val folder = "/_drafts"[m
[32m+[m[32m    val directory = Directories.collectionsDir[m
[32m+[m[32m    val sortBy = "dates"[m
[32m+[m[32m    val toc = false[m
[32m+[m
[32m+[m[32m  object Build:[m
[32m+[m[32m    val logLevel = 1[m
[41m+[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/GlobalDefaults.scala b/src/main/scala/com/anglypascal/scalite/GlobalDefaults.scala[m
[1mdeleted file mode 100644[m
[1mindex 90888e3..0000000[m
[1m--- a/src/main/scala/com/anglypascal/scalite/GlobalDefaults.scala[m
[1m+++ /dev/null[m
[36m@@ -1,53 +0,0 @@[m
[31m-package com.anglypascal.scalite[m
[31m-[m
[31m-import com.rallyhealth.weejson.v1.Arr[m
[31m-import com.rallyhealth.weejson.v1.Obj[m
[31m-[m
[31m-object GlobalDefaults:[m
[31m-[m
[31m-  object Dirs:[m
[31m-    val base = "."[m
[31m-    val collectionsDir = ""[m
[31m-    val destination = "/_site"[m
[31m-    val layoutsDir = "/_layouts"[m
[31m-    val includesDir = "/_includes"[m
[31m-    val sassDir = "/_sass"[m
[31m-    val dataDir = "/_data"[m
[31m-    val pluginsDir = "/_plugins"[m
[31m-[m
[31m-  object Reading:[m
[31m-    val include = Arr(".htaccess")[m
[31m-    val exclude = Arr("build.sbt")[m
[31m-    val keepFiles = Arr(".git", ".svn") // give regex list[m
[31m-    val markdownExt = "markdown,mkdown,mkdn,mkd,md"[m
[31m-    val textileExt = "textile"[m
[31m-    val encoding = "utf-8"[m
[31m-[m
[31m-  object Site:[m
[31m-    val title = "A Shiny New Website"[m
[31m-    val lang = "en"[m
[31m-    val rootUrl = "/"[m
[31m-    val description = "generic site description"[m
[31m-    val author = Obj()[m
[31m-    val paginate = false[m
[31m-    val showExcerpts = true[m
[31m-    val dateFormat = "dd MMM, yyyy"[m
[31m-    val urlTemplate = "{{default}}"[m
[31m-[m
[31m-  object Posts:[m
[31m-    val output = true[m
[31m-    val folder = "/_posts"[m
[31m-    val directory = Dirs.collectionsDir[m
[31m-    val sortBy = "dates"[m
[31m-    val toc = false[m
[31m-[m
[31m-  object Drafts:[m
[31m-    val output = false[m
[31m-    val folder = "/_drafts"[m
[31m-    val directory = Dirs.collectionsDir[m
[31m-    val sortBy = "dates"[m
[31m-    val toc = false[m
[31m-[m
[31m-  object Build:[m
[31m-    val logLevel = 1[m
[31m-[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/Globals.scala b/src/main/scala/com/anglypascal/scalite/Globals.scala[m
[1mindex 91197cc..dff872c 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/Globals.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/Globals.scala[m
[36m@@ -18,6 +18,10 @@[m [mimport com.rallyhealth.weejson.v1.Value[m
 import com.typesafe.scalalogging.Logger[m
 [m
 import scala.collection.mutable.{Map => MMap}[m
[32m+[m[32mimport com.anglypascal.scalite.assets.Assets[m
[32m+[m[32mimport com.anglypascal.scalite.converters.Identity[m
[32m+[m[32mimport com.anglypascal.scalite.collections.StaticPages[m
[32m+[m[32mimport com.anglypascal.scalite.collections.Drafts[m
 [m
 /** Defines the global variables and default configurations. Everything can be[m
   * overwritten in "/\_config.yml" file[m
[36m@@ -126,8 +130,12 @@[m [mobject Globals:[m
   private def loadPlugins(): Unit =[m
     // default plugins[m
     Converters.addConverter(Markdown)[m
[31m-    Collections.addToCollection(Posts)[m
[32m+[m[32m    Converters.addConverter(Identity)[m
[32m+[m[32m    Collections.addCollection(Posts)[m
[32m+[m[32m    Collections.addCollection(Drafts)[m
[32m+[m[32m    Collections.addCollection(StaticPages)[m
     Layouts.addEngine(MustacheLayout)[m
[32m+[m
     // custom plugins[m
     val plugMap = configs.extractOrElse("plugins")(MMap[String, Value]())[m
     PluginManager(dirs("pluginsDir").str, DObj(plugMap))[m
[36m@@ -149,6 +157,7 @@[m [mobject Globals:[m
     processCollections()[m
     processGroups()[m
     processAssets()[m
[32m+[m[32m    glbsObj("assets") = Assets("???")[m
 [m
     for (key, value) <- configs.obj do glbsObj(key) = value[m
 [m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/Collection.scala b/src/main/scala/com/anglypascal/scalite/collections/Collection.scala[m
[1mindex cbc11d2..2ef0336 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/Collection.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/Collection.scala[m
[36m@@ -1,22 +1,22 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[32m+[m[32mimport com.anglypascal.scalite.Defaults[m
[32m+[m[32mimport com.anglypascal.scalite.URL[m
[32m+[m[32mimport com.anglypascal.scalite.converters.Converters[m
 import com.anglypascal.scalite.data.DArr[m
 import com.anglypascal.scalite.data.DNum[m
 import com.anglypascal.scalite.data.DObj[m
 import com.anglypascal.scalite.data.DStr[m
 import com.anglypascal.scalite.documents.Layouts[m
 import com.anglypascal.scalite.documents.Page[m
[31m-[m
[31m-import com.anglypascal.scalite.utils.DirectoryReader.getListOfFilepaths[m
[32m+[m[32mimport com.anglypascal.scalite.plugins.Plugin[m
 import com.anglypascal.scalite.utils.DirectoryReader.getFileName[m
[31m-import com.anglypascal.scalite.converters.Converters[m
[32m+[m[32mimport com.anglypascal.scalite.utils.DirectoryReader.getListOfFilepaths[m
[32m+[m[32mimport com.anglypascal.scalite.utils.StringProcessors.purifyUrl[m
 [m
 import java.nio.charset.StandardCharsets[m
 import java.nio.file.Files[m
 import java.nio.file.Paths[m
[31m-import com.anglypascal.scalite.plugins.Plugin[m
[31m-import com.anglypascal.scalite.URL[m
[31m-import com.anglypascal.scalite.Defaults[m
 [m
 /** Trait to provide support for collections of things. Each collection can be[m
   * rendered to a new webpage with a list of all the posts. This can be toggled[m
[36m@@ -81,14 +81,10 @@[m [mtrait Collection[A <: Item](itemConstructor: ItemConstructor[A])[m
 [m
   /** Template for the permalink. This will override the permalink template for[m
     * the entire collection.[m
[31m-    *[m
[31m-    * TODO: Heres a problem. How do we pass the configs made in the collection[m
[31m-    * to the items? Idea is that there should be a section in the `\_globals`[m
[31m-    * passed to the files named "collection" that defines these[m
     */[m
   private var permalinkTemplate: String = Defaults.permalinkTemplate[m
   private lazy val _permalink: String = URL(permalinkTemplate)(locals)[m
[31m-  def permalink = _permalink[m
[32m+[m[32m  def permalink = purifyUrl(_permalink)[m
 [m
   /** Sort the items of this collection by this key */[m
   protected var sortBy: String = Defaults.Collection.sortBy[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/Collections.scala b/src/main/scala/com/anglypascal/scalite/collections/Collections.scala[m
[1mindex ee067c2..c650447 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/Collections.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/Collections.scala[m
[36m@@ -1,15 +1,15 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[32m+[m[32mimport com.anglypascal.scalite.Defaults[m
 import com.anglypascal.scalite.data.DArr[m
 import com.anglypascal.scalite.data.DBool[m
 import com.anglypascal.scalite.data.DObj[m
 import com.anglypascal.scalite.data.DStr[m
[32m+[m[32mimport com.rallyhealth.weejson.v1.Bool[m
[32m+[m[32mimport com.rallyhealth.weejson.v1.Obj[m
 import com.typesafe.scalalogging.Logger[m
 [m
 import scala.collection.mutable.LinkedHashMap[m
[31m-import com.anglypascal.scalite.Defaults[m
[31m-import com.rallyhealth.weejson.v1.Obj[m
[31m-import com.rallyhealth.weejson.v1.Bool[m
 [m
 /** Companion object with set of collections this site has. Each collection has[m
   * a name, a list of items, and a method to render the items and if specified,[m
[36m@@ -22,7 +22,7 @@[m [mobject Collections:[m
     */[m
   private val collections = LinkedHashMap[String, Collection[?]]()[m
 [m
[31m-  def addToCollection(col: Collection[?]): Unit =[m
[32m+[m[32m  def addCollection(col: Collection[?]): Unit =[m
     collections += (col.name -> col)[m
 [m
   private val logger = Logger("Collection object")[m
[36m@@ -60,7 +60,7 @@[m [mobject Collections:[m
           logger.debug(s"rendering the collection $key")[m
           val dir = colsDir + s"/_$key"[m
           Col.setup(dir, globals)[m
[31m-          addToCollection(Col)[m
[32m+[m[32m          addCollection(Col)[m
 [m
         // collections:[m
         //     drafts: false[m
[36m@@ -71,8 +71,9 @@[m [mobject Collections:[m
         // full configuration[m
         case cobj: Obj =>[m
           val output =[m
[31m-            if key != "posts" then cobj.extractOrElse("output")(false)[m
[31m-            else if key == "posts" then[m
[32m+[m[32m            if key != "posts" && key != "statics" then[m
[32m+[m[32m              cobj.extractOrElse("output")(false)[m
[32m+[m[32m            else if key == "posts" || key == "statics" then[m
               logger.debug("posts are rendered by default")[m
               cobj.extractOrElse("output")(true)[m
             else[m
[36m@@ -107,7 +108,7 @@[m [mobject Collections:[m
 [m
             Col.setup(dir, _globals, sortBy, toc, permalinkTemplate, DObj(cobj))[m
             // add this collection to the collections map[m
[31m-            addToCollection(Col)[m
[32m+[m[32m            addCollection(Col)[m
 [m
         // wasn't mentioned in the configuration[m
         case _ =>[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/Draft.scala b/src/main/scala/com/anglypascal/scalite/collections/Draft.scala[m
[1mindex d2464ad..2c1c8ef 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/Draft.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/Draft.scala[m
[36m@@ -1,9 +1,7 @@[m
 package com.anglypascal.scalite.collections[m
 [m
 import com.anglypascal.scalite.collections.Collection[m
[31m-import com.anglypascal.scalite.converters.Converters[m
 import com.anglypascal.scalite.data.DObj[m
[31m-import com.anglypascal.scalite.utils.DirectoryReader.getListOfFilepaths[m
 [m
 class Draft([m
     parentDir: String,[m
[36m@@ -19,5 +17,4 @@[m [mobject Draft extends ItemConstructor[Draft]:[m
 /** TODO: date will be the motified date collected from the file informations.[m
   */[m
 object Drafts extends Collection[Draft](Draft):[m
[31m-[m
   val name = "drafts"[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/GenericItems.scala b/src/main/scala/com/anglypascal/scalite/collections/GenericItems.scala[m
[1mindex f2f2658..8b0344c 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/GenericItems.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/GenericItems.scala[m
[36m@@ -1,13 +1,12 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[32m+[m[32mimport com.anglypascal.scalite.converters.Converters[m
 import com.anglypascal.scalite.data.DObj[m
 import com.anglypascal.scalite.data.DStr[m
[31m-import com.anglypascal.scalite.utils.DirectoryReader.getListOfFilepaths[m
[31m-import com.anglypascal.scalite.converters.Converters[m
[32m+[m[32mimport com.anglypascal.scalite.data.DataExtensions.*[m
 import com.anglypascal.scalite.documents.Layout[m
 import com.anglypascal.scalite.utils.StringProcessors.titleParser[m
 import com.rallyhealth.weejson.v1.Obj[m
[31m-import com.anglypascal.scalite.data.DataExtensions.*[m
 [m
 /** A generic implementation of the Item class. Defines title or name of the[m
   * Item, and depending on whether it has a front matter or not, converters the[m
[36m@@ -21,7 +20,7 @@[m [mclass GenericItem([m
   /** Title of this item */[m
   val title: String =[m
     front_matter.extractOrElse("title")([m
[31m-      front_matter.getOrElse("name")([m
[32m+[m[32m      front_matter.extractOrElse("name")([m
         titleParser(filepath).getOrElse("untitled" + this.toString)[m
       )[m
     ) // so that titles are always different for different items[m
[36m@@ -37,17 +36,14 @@[m [mclass GenericItem([m
     obj.obj ++= List("title" -> title)[m
     DObj(obj)[m
 [m
[31m-  val visible: Boolean =[m
[31m-    front_matter.extractOrElse("visible")([m
[31m-      globals.getOrElse("postsVisibility")(false)[m
[31m-      // FIXME this global setting should be set by the collection[m
[31m-    )[m
[32m+[m[32m  val visible: Boolean = front_matter.extractOrElse("visible")(false)[m
 [m
   /** If there's some front\_matter, then the main\_matter will be conerted with[m
     * appropriate converter. Otherwise, the identity will be returned[m
     */[m
   protected def render: String =[m
[31m-    if front_matter.obj.isEmpty then main_matter[m
[32m+[m[32m    // TODO what if frontmatter is deleted by the process[m
[32m+[m[32m    if front_matter.obj.isEmpty then main_matter[m[41m [m
     else Converters.convert(main_matter, filepath)[m
 [m
 object GenericItem extends ItemConstructor[GenericItem]:[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/Post.scala b/src/main/scala/com/anglypascal/scalite/collections/Post.scala[m
[1mindex d4d2e18..9ef3d15 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/Post.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/Post.scala[m
[36m@@ -1,5 +1,6 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[32m+[m[32mimport com.anglypascal.scalite.Defaults[m
 import com.anglypascal.scalite.NoLayoutException[m
 import com.anglypascal.scalite.URL[m
 import com.anglypascal.scalite.converters.Converters[m
[36m@@ -8,20 +9,20 @@[m [mimport com.anglypascal.scalite.data.*[m
 import com.anglypascal.scalite.documents.*[m
 import com.anglypascal.scalite.groups.Group[m
 import com.anglypascal.scalite.groups.PostsGroup[m
[31m-import com.anglypascal.scalite.utils.StringProcessors.*[m
 import com.anglypascal.scalite.utils.DateParser.*[m
[32m+[m[32mimport com.anglypascal.scalite.utils.StringProcessors.*[m
[32m+[m[32mimport com.anglypascal.scalite.utils.DirectoryReader.getFileName[m
 import com.rallyhealth.weejson.v1.Arr[m
 import com.rallyhealth.weejson.v1.Bool[m
 import com.rallyhealth.weejson.v1.Obj[m
 import com.rallyhealth.weejson.v1.Str[m
 import com.rallyhealth.weejson.v1.Value[m
[32m+[m[32mimport com.typesafe.scalalogging.Logger[m
 [m
 import java.nio.charset.StandardCharsets[m
 import java.nio.file.Files[m
 import java.nio.file.Paths[m
 import scala.collection.mutable.LinkedHashMap[m
[31m-import com.typesafe.scalalogging.Logger[m
[31m-import com.anglypascal.scalite.Defaults[m
 [m
 /** Reads the content of a post file and prepares a Post object.[m
   *[m
[36m@@ -37,7 +38,7 @@[m [mclass Post([m
     relativePath: String,[m
     globals: DObj[m
 ) extends Item(parentDir, relativePath, globals)[m
[31m-    with ReaderOps[m
[32m+[m[32m    // with ReaderOps[m
     with Page:[m
 [m
   private val logger = Logger("Post")[m
[36m@@ -92,10 +93,11 @@[m [mclass Post([m
       )[m
     val obj = dateParseObj(dateString, dateFormat)[m
     obj("title") = title[m
[31m-    obj("modified_time") = lastModifiedTime(dateFormat)[m
[32m+[m[32m    obj("modifiedTime") = lastModifiedTime(filepath, dateFormat)[m
     obj("outputExt") = outputExt[m
     obj("collection") =[m
       globals.getOrElse("collection")(DObj()).getOrElse("name")("posts")[m
[32m+[m[32m    obj("filename") = getFileName(filepath)[m
     // TODO slugs[m
     DObj(obj)[m
 [m
[36m@@ -110,9 +112,8 @@[m [mclass Post([m
           )[m
         )[m
     )[m
[31m-[m
[31m-  lazy val _permalink = URL(permalinkTemplate)(urlObj)[m
[31m-  def permalink = _permalink[m
[32m+[m[32m  private lazy val _permalink = URL(permalinkTemplate)(urlObj)[m
[32m+[m[32m  def permalink = purifyUrl(_permalink)[m
 [m
   /** Returns whether to render this post or not. Default is true. Putting[m
     * output: false inside collection.post complete turns off rendering of[m
[36m@@ -177,7 +178,7 @@[m [mclass Post([m
     val str = Converters.convert(main_matter, filepath)[m
     val context = DObj([m
       postUrls.map(p => (p._1, DStr(p._2))) ++[m
[31m-        Map("site" -> globals, "post" -> locals)[m
[32m+[m[32m        Map("site" -> globals, "page" -> locals)[m
     )[m
     parent match[m
       case Some(l) => l.render(context, str)[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/Posts.scala b/src/main/scala/com/anglypascal/scalite/collections/Posts.scala[m
[1mindex d7986c7..656a10b 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/Posts.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/Posts.scala[m
[36m@@ -1,9 +1,5 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[31m-import com.anglypascal.scalite.data.DObj[m
[31m-import com.anglypascal.scalite.plugins.Plugin[m
[31m-import com.anglypascal.scalite.data.Data[m
[31m-[m
 /** Companion object that creates the Posts collection. */[m
 object Posts extends Collection[Post](Post):[m
 [m
[36m@@ -12,5 +8,3 @@[m [mobject Posts extends Collection[Post](Post):[m
 [m
   // Default value of sortBy. Updated by the configuration[m
   sortBy = "date"[m
[31m-[m
[31m-  /** Find all the files from the directory and create Post objects */[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/collections/StaticPage.scala b/src/main/scala/com/anglypascal/scalite/collections/StaticPage.scala[m
[1mindex 1c1a00e..f046143 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/collections/StaticPage.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/collections/StaticPage.scala[m
[36m@@ -1,9 +1,89 @@[m
 package com.anglypascal.scalite.collections[m
 [m
[32m+[m[32mimport com.anglypascal.scalite.Defaults[m
[32m+[m[32mimport com.anglypascal.scalite.URL[m
[32m+[m[32mimport com.anglypascal.scalite.converters.Converters[m
 import com.anglypascal.scalite.data.DObj[m
[32m+[m[32mimport com.anglypascal.scalite.data.DStr[m
[32m+[m[32mimport com.anglypascal.scalite.data.DataExtensions.*[m
[32m+[m[32mimport com.anglypascal.scalite.documents.Page[m
[32m+[m[32mimport com.anglypascal.scalite.utils.DateParser.lastModifiedTime[m
[32m+[m[32mimport com.anglypascal.scalite.utils.DirectoryReader.getFileName[m
[32m+[m[32mimport com.anglypascal.scalite.utils.StringProcessors.purifyUrl[m
[32m+[m[32mimport com.rallyhealth.weejson.v1.Obj[m
 [m
 class StaticPage([m
     parentDir: String,[m
     relativePath: String,[m
     globals: DObj[m
[31m-) extends Post(parentDir, relativePath, globals) // except for the date[m
[32m+[m[32m) extends Item(parentDir, relativePath, globals)[m
[32m+[m[32m    with Page:[m
[32m+[m[32m  /** */[m
[32m+[m
[32m+[m[32m  protected val parentName: String = "default"[m
[32m+[m
[32m+[m[32m  val title: String =[m
[32m+[m[32m    front_matter.extractOrElse("title")([m
[32m+[m[32m      front_matter.extractOrElse("name")([m
[32m+[m[32m        getFileName(filepath)[m
[32m+[m[32m      )[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m  def locals: DObj =[m
[32m+[m[32m    val dateFormat =[m
[32m+[m[32m      front_matter.extractOrElse("dateFormat")([m
[32m+[m[32m        globals.getOrElse("dateFormat")("yyyy-MM-dd")[m
[32m+[m[32m      )[m
[32m+[m[32m    val obj = Obj([m
[32m+[m[32m      "title" -> title,[m
[32m+[m[32m      "outputExt" -> outputExt,[m
[32m+[m[32m      "modifiedTime" -> lastModifiedTime(filepath, dateFormat),[m
[32m+[m[32m      "filename" -> getFileName(filepath)[m
[32m+[m[32m    )[m
[32m+[m[32m    DObj(obj)[m
[32m+[m
[32m+[m[32m  private lazy val permalinkTemplate =[m
[32m+[m[32m    front_matter.extractOrElse("permalinkTemplate")([m
[32m+[m[32m      globals[m
[32m+[m[32m        .getOrElse("collection")(DObj())[m
[32m+[m[32m        .getOrElse("permalinkTemplate")([m
[32m+[m[32m          globals.getOrElse("permalinkTemplate")([m
[32m+[m[32m            Defaults.staticFilesPermalink[m
[32m+[m[32m          )[m
[32m+[m[32m        )[m
[32m+[m[32m    )[m
[32m+[m[32m  private lazy val _permalink = URL(permalinkTemplate)(locals)[m
[32m+[m[32m  def permalink = purifyUrl(_permalink)[m
[32m+[m
[32m+[m[32m  private lazy val _outputExt: String =[m
[32m+[m[32m    front_matter.extractOrElse("outputExt")([m
[32m+[m[32m      Converters[m
[32m+[m[32m        .findByExt(filepath)[m
[32m+[m[32m        .map(_.outputExt)[m
[32m+[m[32m        .getOrElse(".html")[m
[32m+[m[32m    )[m
[32m+[m[32m  def outputExt = _outputExt[m
[32m+[m
[32m+[m[32m  protected def render: String =[m
[32m+[m[32m    val str = Converters.convert(main_matter, filepath)[m
[32m+[m[32m    val context = DObj([m
[32m+[m[32m      "site" -> globals,[m
[32m+[m[32m      "page" -> locals[m
[32m+[m[32m    )[m
[32m+[m[32m    parent match[m
[32m+[m[32m      case Some(l) => l.render(context, str)[m
[32m+[m[32m      case None    => str[m
[32m+[m
[32m+[m[32m  val visible: Boolean = front_matter.extractOrElse("visible")(true)[m
[32m+[m
[32m+[m[32mobject StaticPage extends ItemConstructor[StaticPage]:[m
[32m+[m[32m  def apply([m
[32m+[m[32m      parentDir: String,[m
[32m+[m[32m      relativePath: String,[m
[32m+[m[32m      globals: DObj[m
[32m+[m[32m  ): StaticPage =[m
[32m+[m[32m    new StaticPage(parentDir, relativePath, globals)[m
[32m+[m
[32m+[m[32mobject StaticPages extends Collection[StaticPage](StaticPage):[m
[32m+[m[32m  /** */[m
[32m+[m[32m  val name = "statics"[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/converters/Converter.scala b/src/main/scala/com/anglypascal/scalite/converters/Converter.scala[m
[1mindex 658139d..463ac07 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/converters/Converter.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/converters/Converter.scala[m
[36m@@ -22,7 +22,7 @@[m [mtrait Converter extends Plugin:[m
     */[m
   def setExt(exts: String): Unit =[m
     val s = exts.split(",").map(_.trim).mkString("|")[m
[31m-    _ext = (raw".*\.(" + s + ")").r[m
[32m+[m[32m    _ext = (".*\\.(" + s + ")").r[m
 [m
   /** Does this converter accepts the file? */[m
   def matches(filepath: String): Boolean =[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/converters/Markdown.scala b/src/main/scala/com/anglypascal/scalite/converters/Markdown.scala[m
[1mindex 60d2c1f..556ca3e 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/converters/Markdown.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/converters/Markdown.scala[m
[36m@@ -8,7 +8,7 @@[m [mimport laika.markdown.github[m
 import laika.parse.code[m
 [m
 object Markdown extends Converter:[m
[31m-  val fileType: String = "markdown"[m
[32m+[m[32m  val fileType = "markdown"[m
 [m
   setExt("md,markdown,mkd")[m
 [m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/documents/Reader.scala b/src/main/scala/com/anglypascal/scalite/documents/Reader.scala[m
[1mindex 2334efe..f788894 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/documents/Reader.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/documents/Reader.scala[m
[36m@@ -35,17 +35,17 @@[m [mtrait Reader(val filepath: String):[m
       case yaml_regex(a, b) => (yamlParser(a), b)[m
       case _                => (Obj(), src)[m
 [m
[31m-/** To provide support for extension methods on a Reader[m
[31m-  */[m
[31m-trait ReaderOps extends Reader:[m
[31m-  import org.joda.time.DateTime[m
[31m-[m
[31m-  /** Gets the last modified time of a file in the given date format */[m
[31m-  def lastModifiedTime(dateFormat: String): String =[m
[31m-    val path = Paths.get(filepath)[m
[31m-    val modTime =[m
[31m-      Files.getLastModifiedTime(path).toInstant().getEpochSecond()[m
[31m-    val date = new DateTime(modTime)[m
[31m-    dateToString(date, dateFormat)[m
[31m-[m
[31m-  val p = 2[m
[32m+[m[32m// /** To provide support for extension methods on a Reader[m
[32m+[m[32m//   */[m
[32m+[m[32m// trait ReaderOps extends Reader:[m
[32m+[m[32m//   import org.joda.time.DateTime[m
[32m+[m
[32m+[m[32m//   /** Gets the last modified time of a file in the given date format */[m
[32m+[m[32m//   def lastModifiedTime(dateFormat: String): String =[m
[32m+[m[32m//     val path = Paths.get(filepath)[m
[32m+[m[32m//     val modTime =[m
[32m+[m[32m//       Files.getLastModifiedTime(path).toInstant().getEpochSecond()[m
[32m+[m[32m//     val date = new DateTime(modTime)[m
[32m+[m[32m//     dateToString(date, dateFormat)[m
[32m+[m
[32m+[m[32m//   val p = 2[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/plugins/PluginManager.scala b/src/main/scala/com/anglypascal/scalite/plugins/PluginManager.scala[m
[1mindex 0ef2635..4a8221f 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/plugins/PluginManager.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/plugins/PluginManager.scala[m
[36m@@ -17,14 +17,12 @@[m [mimport java.net.URL[m
 import java.net.URLClassLoader[m
 import scala.reflect.ClassTag[m
 [m
[31m-/** Object that is called with the plugins directory and the plugins data from[m
[31m-  * config.yml to add all the available plugins to runtime[m
[31m-  */[m
[32m+[m[32m/** Load Plugin objects form the jar files in the plugins directory */[m
 object PluginManager:[m
 [m
   private val logger = Logger("Plugin Manager")[m
 [m
[31m-  /** Rerturns the URLClassLoader from the jar file from jarPath */[m
[32m+[m[32m  /** Rerturns the URLClassLoader from jarPath */[m
   private def loadJar(jarPath: String): Option[URLClassLoader] =[m
     try[m
       Some([m
[36m@@ -41,7 +39,7 @@[m [mobject PluginManager:[m
         logger.error(s"Loading $jarPath threw " + e.toString)[m
         None[m
 [m
[31m-  /** Returns the object from the classLoader if it exists */[m
[32m+[m[32m  /** Returns the object objName from the classLoader if it exists */[m
   private def getObject[T <: Plugin]([m
       objName: String[m
   )(classLoader: URLClassLoader)(using man: ClassTag[T]): Option[T] =[m
[36m@@ -52,9 +50,7 @@[m [mobject PluginManager:[m
           .getField("MODULE$")[m
           .get(man.runtimeClass)[m
       Some(obj.asInstanceOf[T])[m
[31m-[m
[31m-      /** TODO Check if there are any specifc exceptions being thorwn[m
[31m-        */[m
[32m+[m[32m      // TODO Check if there are any specifc exceptions being thorwn[m
     catch[m
       case e =>[m
         logger.trace(s"$objName wasn't in classLoader ${classLoader.toString}")[m
[36m@@ -107,7 +103,7 @@[m [mobject PluginManager:[m
 [m
   private def loadCollections(names: List[DStr | DObj]) =[m
     findObjects[Collection[?]](names).map(C =>[m
[31m-      Collections.addToCollection(C.asInstanceOf[Collection[?]])[m
[32m+[m[32m      Collections.addCollection(C.asInstanceOf[Collection[?]])[m
     )[m
 [m
   private def loadLayouts(names: List[DStr | DObj]) =[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/utils/DateParser.scala b/src/main/scala/com/anglypascal/scalite/utils/DateParser.scala[m
[1mindex 6d25e55..32f5406 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/utils/DateParser.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/utils/DateParser.scala[m
[36m@@ -3,6 +3,7 @@[m [mpackage com.anglypascal.scalite.utils[m
 import com.github.nscala_time.time.Imports.*[m
 import com.rallyhealth.weejson.v1.Obj[m
 import com.typesafe.scalalogging.Logger[m
[32m+[m[32m// import org.joda.time.DateTime[m
 [m
 /** TODO: This should be stored in the page actually, not just in post. How do[m
   * we refactor the code to allow this?[m
[36m@@ -77,3 +78,13 @@[m [mobject DateParser:[m
       case e =>[m
         Logger("dateToString").error("didn't receive a valid format string")[m
         ""[m
[32m+[m
[32m+[m[32m  def lastModifiedTime(filepath: String, dateFormat: String): String =[m
[32m+[m[32m    import java.nio.file.Files[m
[32m+[m[32m    import java.nio.file.Paths[m
[32m+[m
[32m+[m[32m    val path = Paths.get(filepath)[m
[32m+[m[32m    val modTime =[m
[32m+[m[32m      Files.getLastModifiedTime(path).toInstant().getEpochSecond()[m
[32m+[m[32m    val date = new DateTime(modTime)[m
[32m+[m[32m    dateToString(date, dateFormat)[m
[1mdiff --git a/src/main/scala/com/anglypascal/scalite/utils/StringProcessors.scala b/src/main/scala/com/anglypascal/scalite/utils/StringProcessors.scala[m
[1mindex bb629d9..ad2dd4b 100644[m
[1m--- a/src/main/scala/com/anglypascal/scalite/utils/StringProcessors.scala[m
[1m+++ b/src/main/scala/com/anglypascal/scalite/utils/StringProcessors.scala[m
[36m@@ -120,3 +120,6 @@[m [mobject StringProcessors:[m
     slugifyModes.map(m => m -> slugify(s, m)).map(println(_))[m
     slugifyModes.map(slugify(s, _, true)).map(println(_))[m
 [m
[32m+[m
[32m+[m[32m  // removes double backslashes and some encoding issues from urls[m
[32m+[m[32m  def purifyUrl(str: String): String = ???[m
